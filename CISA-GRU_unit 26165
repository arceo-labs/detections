Customized NTLM listener

rule APT28_NTLM_LISTENER {
   	meta:
          	description = "Detects NTLM listeners including APT28's custom one"
 
   	strings:
          	$command_1 = "start-process powershell.exe -WindowStyle hidden"
          	$command_2 = "New-Object System.Net.HttpListener"
          	$command_3 = "Prefixes.Add('http://localhost:8080/')"
          	$command_4 = "-match 'Authorization'"
          	$command_5 = "GetValues('Authorization')"
          	$command_6 = "Request.RemoteEndPoint.Address.IPAddressToString"
          	$command_7 = "@(0x4e,0x54,0x4c,0x4d, 0x53,0x53,0x50,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x28,0x00,0x00,0x01,0x82,0x00,0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00)"
          	$command_8 = ".AllKeys"
              
          	$variable_1 = "$NTLMAuthentication" nocase
          	$variable_2 = "$NTLMType2" nocase
          	$variable_3 = "$listener" nocase
          	$variable_4 = "$hostip" nocase
          	$variable_5 = "$request" nocase
          	$variable_6 = "$ntlmt2" nocase
          	$variable_7 = "$NTLMType2Response" nocase
          	$variable_8 = "$buffer" nocase
 
   	condition:
          	5 of ($command_*) 
          	or
          	all of ($variable_*)
}


HEADLACE shortcut

rule APT28_HEADLACE_SHORTCUT {
   	meta:
          	description = "Detects the HEADLACE backdoor shortcut dropper. Rule is meant for threat hunting."
 
   	strings:
          	$type = "[InternetShortcut]" ascii nocase
          	$url  = "file://"
          	$edge = "msedge.exe"
          	$icon = "IconFile"
 
   	condition:
          	all of them
}


HEADLACE credential dialogbox phishing 

rule APT28_HEADLACE_CREDENTIALDIALOG {
   	meta:
          	description = "Detects scripts used by APT28 to lure user into entering credentials"
 
   	strings:
          	$command_1 = "while($true)"
          	$command_2 = "Get-Credential $(whoami)"
          	$command_3 = "Add-Content"
          	$command_4 = ".UserName"
          	$command_5 = ".GetNetworkCredential().Password"
          	$command_6 = "GetNetworkCredential().Password.Length -ne 0"
 
   	condition:
          	5 of them
}


HEADLACE core script

rule APT28_HEADLACE_CORE {
   	meta:
          	description = "Detects HEADLACE core batch scripts"
 
   	strings:
          	$chcp = "chcp 65001" ascii
          	$headless = "start \"\" msedge --headless=new --disable-gpu" ascii
              
          	$command_1 = "taskkill /im msedge.exe /f" ascii
          	$command_2 = "whoami>\"%programdata%" ascii
          	$command_3 = "timeout" ascii
          	$command_4 = "copy \"%programdata%\\" ascii
 
          	$non_generic_del_1 = "del /q /f \"%programdata%" ascii
          	$non_generic_del_3 = "del /q /f \"%userprofile%\\Downloads\\" ascii
 
          	$generic_del = "del /q /f" ascii
 
   	condition:
          	(
                  	$chcp 
                  	and 
                  	$headless
          	)
          	and
          	(
                  	1 of ($non_generic_del_*)
                  	or
                  	($generic_del)
                  	or
                  	3 of ($command_*)
          	)
}


MASEPIE

rule APT28_MASEPIE {
   	meta:
          	description = "Detects MASEPIE python script"
 
   	strings:
          	$masepie_unique_1 = "os.popen('whoami').read()"
          	$masepie_unique_2 = "elif message == 'check'"
          	$masepie_unique_3 = "elif message == 'send_file':"
          	$masepie_unique_4 = "elif message == 'get_file'"
          	$masepie_unique_5 = "enc_mes('ok'"
          	$masepie_unique_6 = "Bad command!'.encode('ascii'"
          	$masepie_unique_7 = "{user}{SEPARATOR}{k}"
          	$masepie_unique_8 = "raise Exception(\"Reconnect"
 
   	condition:
          	3 of ($masepie_unique_*)
}


STEELHOOK

rule APT28_STEELHOOK {
   	meta:
          	description = "Detects APT28's STEELHOOK powershell script"
 
   	strings:
          	$s_1 = "$($env:LOCALAPPDATA\\\\Google\\\\Chrome\\\\User Data\\\\Local State)"
          	$s_2 = "$($env:LOCALAPPDATA\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data)"
 
          	$s_3 = "$($env:LOCALAPPDATA\\\\Microsoft\\\\Edge\\\\User Data\\\\Local State)"
          	$s_4 = "$($env:LOCALAPPDATA\\\\Microsoft\\\\Edge\\\\User Data\\\\Default\\\\Login Data)"
 
          	$s_5 = "os_crypt.encrypted_key"
          	$s_6 = "System.Security.Cryptography.DataProtectionScope"
          	$s_7 = "[system.security.cryptography.protectdata]::Unprotect"
          	$s_8 = "Invoke-RestMethod"
 
   	condition:
          	all of them
}


PSEXEC

rule GENERIC_PSEXEC {
   	meta:
          	description = "Detects SysInternals PSEXEC executable"
 
   	strings:
          	$sysinternals_1 = "SYSINTERNALS SOFTWARE LICENCE TERMS"
          	$sysinternals_2 = "/accepteula"
          	$sysinternals_3 = "Software\\Sysinternals"
 
          	$network_1 = "\\\\%s\\IPC$"
          	$network_2 = "\\\\%s\\ADMIN$\\%s"
          	$network_3 = "\\Device\\LanmanRedirector\\%s\\ipc$"
 
          	$psexec_1 = "PSEXESVC"
          	$psexec_2 = "PSEXEC-{}-"
          	$psexec_3 = "Copying %s to %s..."
          	$psexec_4 = "gPSINFSVC"
 
 
   	condition:
          	(
                  	( uint16( 0x0 ) ==0x5a4d )
                  	and
                  	( uint16( uint32( 0x3c )) == 0x4550 )
          	)
          	and 
                  	filesize < 1024KB
          	and
          	(
                  	( any of ($sysinternals_*) and any of ($psexec_*) )
                  	or
                  	( 2 of ($network_*) and 2 of ($psexec_*))
          	)
}
